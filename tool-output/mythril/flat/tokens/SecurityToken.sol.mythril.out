==== Delegatecall Proxy ====
SWC ID: 112
Severity: Low
Contract: OwnedUpgradeabilityProxy
Function name: fallback
PC address: 2172
Estimated Gas Usage: 714 - 3443
The contract implements a delegatecall proxy.
The smart contract forwards the received calldata via delegatecall. Note that callers can execute arbitrary functions in the callee contract and that the callee contract can access the storage of the calling contract. Make sure that the callee contract is audited properly.DELEGATECALL target: 0x0
--------------------
In file: tokens/SecurityToken.sol:35

delegatecall(gas, implementation, 0, calldatasize, 0, 0)

--------------------

==== Integer Overflow ====
SWC ID: 101
Severity: High
Contract: ERC20
Function name: [increaseAllowance(address,uint256), increaseAllowance(address,uint256)] (ambiguous)
PC address: 2538
Estimated Gas Usage: 21049 - 84019
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: tokens/SecurityToken.sol:715

a + b

--------------------

==== Delegatecall Proxy ====
SWC ID: 112
Severity: Low
Contract: SecurityToken
Function name: fallback
PC address: 24830
Estimated Gas Usage: 570 - 3299
The contract implements a delegatecall proxy.
The smart contract forwards the received calldata via delegatecall. Note that callers can execute arbitrary functions in the callee contract and that the callee contract can access the storage of the calling contract. Make sure that the callee contract is audited properly.DELEGATECALL target: 0x0
--------------------
In file: tokens/SecurityToken.sol:35

delegatecall(gas, implementation, 0, calldatasize, 0, 0)

--------------------

==== Exception State ====
SWC ID: 110
Severity: Low
Contract: SecurityToken
Function name: [canTransferByPartition(address,address,bytes32,uint256,bytes), canTransferByPartition(address,address,bytes32,uint256,bytes)] (ambiguous)
PC address: 25395
Estimated Gas Usage: 1283 - 4060
A reachable exception has been detected.
It is possible to trigger an exception (opcode 0xfe). Exceptions can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. Note that explicit `assert()` should only be used to check invariants. Use `require()` for regular input checking.
--------------------
In file: tokens/SecurityToken.sol:3449

_value % granularity

--------------------

==== Exception State ====
SWC ID: 110
Severity: Low
Contract: SecurityToken
Function name: [transferWithData(address,uint256,bytes), transferWithData(address,uint256,bytes)] (ambiguous)
PC address: 32769
Estimated Gas Usage: 15835 - 94454
A reachable exception has been detected.
It is possible to trigger an exception (opcode 0xfe). Exceptions can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. Note that explicit `assert()` should only be used to check invariants. Use `require()` for regular input checking.
--------------------
In file: tokens/SecurityToken.sol:2680

_value % granularity

--------------------


